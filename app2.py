import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import streamlit as st

# Load the GAN-generated dataset
data = pd.read_csv('gan_synthetic_evening_activities_with_more_columns.csv')

# Streamlit UI
st.title("Exploratory Data Analysis of GAN-Generated Dataset")
st.write("This dashboard provides insights into the synthetic dataset generated by the GAN.")

# Dataset Information
st.header("Dataset Information")
st.write(data.info())
st.write("The dataset contains synthetic data generated by the GAN.")

# Missing Values
st.header("Missing Values")
st.write(data.isnull().sum())
st.write("There are no missing values in the dataset, so it is clean and ready for analysis.")

# Activity Distribution
st.header("Activity Distribution")
activity_columns = [col for col in data.columns if col.startswith('activity_type_')]
activity_counts = data[activity_columns].sum().sort_values(ascending=False)
st.write(activity_counts)
st.write("The distribution of activities in the synthetic dataset.")

fig, ax = plt.subplots(figsize=(10, 6))
activity_counts.plot(kind='bar', color='skyblue', ax=ax)
ax.set_title('Distribution of Activities')
ax.set_xlabel('Activity Type')
ax.set_ylabel('Count')
st.pyplot(fig)

# Average Time Spent on Activities
st.header("Average Time Spent on Activities")
st.write("Since the dataset is normalized, durations are not in minutes. You may need to denormalize them for meaningful analysis.")

# Trends by Gender
st.header("Activity Distribution by Gender")
gender_columns = ['gender_F', 'gender_M']
gender_counts = data[gender_columns].sum()
st.write(gender_counts)

fig, ax = plt.subplots(figsize=(6, 4))
gender_counts.plot(kind='bar', color=['pink', 'blue'], ax=ax)
ax.set_title('Activity Distribution by Gender')
ax.set_xlabel('Gender')
ax.set_ylabel('Count')
st.pyplot(fig)

# Correlation Analysis
st.header("Correlation Analysis")
numerical_columns = ['duration', 'age', 'performance_score', 'study_hours', 'stress_level']
correlation = data[numerical_columns].corr()
st.write(correlation)

fig, ax = plt.subplots(figsize=(6, 4))
sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f', ax=ax)
ax.set_title('Correlation Heatmap')
st.pyplot(fig)